{"version":3,"sources":["components/SimulationParameters.jsx","actions/index.js","actions/types.js","lib/associationsToVisualisationData.js","lib/downloadGroups.js","components/Visualisation.jsx","components/App.jsx","lib/paretoSimulation.js","reducers/simulationReducer.js","reducers/index.js","index.js"],"names":["component","pauseSimulation","type","startSimulation","nodeCount","maxTicks","stepTime","dispatch","getState","payload","setTimeout","updateIfNotComplete","simulation","running","tickIfNotComplete","currentTick","resetSimulation","advanceToCompletion","associationsToVisualisationData","associations","length","groups","Array","findRoot","current","groupCounts","l","currentGroup","data","label","Object","values","forEach","groupCount","push","category","value","valueColor","validate","assign","mapStateToProps","graphData","Input","props","fieldClassName","meta","error","touched","className","controlType","input","SimulationParameters","f","handleSubmit","Field","name","onClick","csvText","sort","one","other","window","open","encodeURI","downloadGroups","e","preventDefault","reduxForm","form","connect","Visualisation","maxTick","display","containerRef","useRef","width","parentNode","offsetWidth","ref","style","indexBy","keys","margin","top","right","bottom","left","padding","colors","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","App","initialiseSimulation","initialConditions","selectRandom","upperBound","dontSelect","selection","Math","floor","random","counter","tickSimulation","itemCount","selectionOne","selectionTwo","rootOne","rootTwo","INITIAL_STATE","combineReducers","formReducer","state","initialAssociations","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37afa49f.chunk.js","sourcesContent":["import React from 'react';\nimport { Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\n\nimport {\n  pauseSimulation,\n  startSimulation,\n  resetSimulation,\n  advanceToCompletion\n} from '../actions';\nimport { downloadGroups } from '../lib/downloadGroups';\nimport { associationsToVisualisationData } from '../lib/associationsToVisualisationData';\n\nconst validate = ({ maxTicks, nodeCount, stepTime }) => Object.assign(\n  {},\n  { maxTicks: !maxTicks ? 'Please enter a simulation length in ticks': '' },\n  { nodeCount: !nodeCount ? 'Please enter the number of items in experiment': '' },\n  { stepTime: !stepTime ? 'Please enter the length of each step in milliseconds': '' }\n);\n\nconst mapStateToProps = ({ simulation }) => ({ data: simulation.graphData, associations: simulation.associations });\n\nconst wireUpRedux = component => reduxForm(\n  {\n    form: 'simulation',\n    validate\n  }\n)(\n  connect(mapStateToProps, { startSimulation, pauseSimulation, resetSimulation, advanceToCompletion })(component)\n);\n\nconst Input = (props) => {\n  const fieldClassName = `field ${props.meta.error && props.meta.touched ? 'error': ''}`;\n\n  return (\n    <div className={ fieldClassName }>\n      <label>\n        { props.label }\n      </label>\n      <props.controlType type={ props.type } { ...props.input } />\n      {\n        props.meta.error && props.meta.touched ? (\n          <div className=\"ui error message\">\n            { props.meta.error }\n          </div>):\n        null }\n    </div>\n  );\n};\n\nconst preventingDefault = f => e => {\n  e.preventDefault();\n  f(e);\n};\n\nexport const SimulationParameters = wireUpRedux(({\n  handleSubmit,\n  startSimulation,\n  pauseSimulation,\n  resetSimulation,\n  advanceToCompletion,\n  data,\n  associations\n}) => (\n  <form className=\"ui error form\">\n    <h3>\n      Simulation Parameters\n    </h3>\n    <div className=\"ui field\">\n      <Field\n        name=\"maxTicks\"\n        component={ Input }\n        type=\"text\"\n        controlType=\"input\"\n        label=\"Simulation length (in trials)\"\n      />\n      <Field\n        name=\"nodeCount\"\n        component={ Input }\n        type=\"text\"\n        controlType=\"input\"\n        label=\"Number of items in simulation\"\n      />\n      <Field\n        name=\"stepTime\"\n        component={ Input }\n        type=\"text\"\n        controlType=\"input\"\n        label=\"Time in milliseconds per step\"\n      />\n    </div>\n    <hr />\n    <div className=\"ui padded segment\">\n      <button className=\"ui primary button\" onClick={ handleSubmit(startSimulation) }>\n        <i className=\"play icon\"/>\n        Start\n      </button>\n      <br/>\n      <br/>\n      <button className=\"ui labeled icon button\" onClick={ handleSubmit(pauseSimulation) }>\n        <i className=\"pause icon\"/>\n        Pause\n      </button>\n      <br/>\n      <br/>\n      <button className=\"ui labeled icon button\" onClick={ handleSubmit(advanceToCompletion) }>\n        <i className=\"right arrow icon\"/>\n        Complete\n      </button>\n      <br/>\n      <br/>\n      <button className=\"ui labeled icon button\" onClick={ handleSubmit(resetSimulation) }>\n        <i className=\"redo icon\"/>\n        Restart\n      </button>\n      <br/>\n      <br/>\n      <button className=\"ui labeled icon button\" onClick={ preventingDefault(() => { downloadGroups(associationsToVisualisationData(associations)); }) }>\n        <i className=\"download icon\"/>\n        Download\n      </button>\n    </div>\n  </form>\n));\n","import {\n  TICK_SIMULATION,\n  PAUSE_SIMULATION,\n  RESET_SIMULATION,\n  START_SIMULATION,\n  ADVANCE_TO_COMPLETION,\n  UPDATE_VISUALISATION_DATA\n} from './types';\n\nexport const tickSimulation = () => ({\n  type: TICK_SIMULATION\n});\n\nexport const pauseSimulation = () => ({\n  type: PAUSE_SIMULATION\n});\n\nconst VISUALISATION_UPDATE_TIME = 1000;\nconst MAX_NODES_TO_VISUALISE = 1000;\n\nexport const updateVisualisationData = () => (dispatch, getState) => {\n  const updateIfNotComplete = () => {\n    const { simulation: { running, nodeCount } } = getState();\n    if (running && nodeCount <= MAX_NODES_TO_VISUALISE) {\n      dispatch({\n        type: UPDATE_VISUALISATION_DATA\n      });\n      setTimeout(updateIfNotComplete, VISUALISATION_UPDATE_TIME);\n    }\n  };\n\n  dispatch({\n    type: UPDATE_VISUALISATION_DATA\n  });\n\n  setTimeout(\n    updateIfNotComplete,\n    VISUALISATION_UPDATE_TIME\n  );\n};\n\nexport const startSimulation = ({ nodeCount, maxTicks, stepTime }) => (dispatch, getState) => {\n  const tickIfNotComplete = () => {\n    const {\n      simulation: {\n        currentTick,\n        maxTicks,\n        running,\n        stepTime\n      }\n    } = getState();\n    if (running && currentTick < maxTicks) {\n      dispatch(tickSimulation());\n      setTimeout(tickIfNotComplete, stepTime);\n    }\n  };\n\n  dispatch({\n    type: START_SIMULATION,\n    payload: {\n      nodeCount,\n      maxTicks,\n      stepTime\n    }\n  });\n\n  if (nodeCount <= MAX_NODES_TO_VISUALISE) {\n    dispatch(updateVisualisationData());\n  }\n\n  setTimeout(\n    tickIfNotComplete,\n    stepTime\n  );\n};\n\nexport const resetSimulation = () => ({\n  type: RESET_SIMULATION\n});\n\nexport const advanceToCompletion = () => (dispatch, getState) => {\n  dispatch({\n    type: ADVANCE_TO_COMPLETION\n  });\n\n  const tickIfNotComplete = () => {\n    const {\n      simulation: {\n        currentTick,\n        maxTicks,\n        running,\n        stepTime\n      }\n    } = getState();\n    if (running && currentTick < maxTicks) {\n      dispatch(tickSimulation());\n      setTimeout(tickIfNotComplete, stepTime);\n    }\n  };\n\n  if (!getState().running) {\n    tickIfNotComplete();\n  }\n};\n","export const TICK_SIMULATION = 'TICK_SIMULATION';\nexport const ADVANCE_TO_COMPLETION = 'ADVANCE_TO_COMPLETION';\nexport const PAUSE_SIMULATION = 'PAUSE_SIMULATION';\nexport const START_SIMULATION = 'START_SIMULATION';\nexport const RESET_SIMULATION = 'RESET_SIMULATION';\nexport const UPDATE_VISUALISATION_DATA = 'UPDATE_VISUALISATION_DATA';\n","export const associationsToVisualisationData = ({ associations }) => {\n  const nodeCount = associations.length;\n  const groups = new Array(nodeCount);\n  const findRoot = (current) => {\n    while (associations[current] !== current) {\n      current = associations[current];\n      if (groups[current]) return groups[current];\n    }\n    return current;\n  };\n\n  const groupCounts = {};\n  for (let l = 0; l < nodeCount; ++l) {\n    const currentGroup = findRoot(l);\n    groups[l] = currentGroup;\n    if (!groupCounts[currentGroup]) groupCounts[currentGroup] = 0;\n    ++groupCounts[currentGroup];\n  }\n\n  const data = [];\n  let label = 0;\n  Object.values(groupCounts).forEach(groupCount => {\n    data.push({\n      category: `${label}`,\n      value: groupCount,\n      valueColor: 'hsl(8, 70%, 50%)'\n    });\n    ++label;\n  });\n\n  return data;\n};\n","export const downloadGroups = (data) => {\n  let csvText = \"data:text/csv;charset=utf-8,'groupId','memberCount'\\r\\n\";\n\n  data\n    .sort((one, other) => one.value < other.value)\n    .forEach(({ category, value }) =>\n      csvText += `${category},${value}\\r\\n`\n    );\n\n  window.open(encodeURI(csvText));\n};\n","import React, { useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ResponsiveBar } from '@nivo/bar';\n\nimport './Visualisation.scss';\n\nconst mapStateToProps = ({ simulation }) => {\n  return {\n    currentTick: simulation.currentTick,\n    maxTick: simulation.maxTicks,\n    data: simulation.graphData,\n    running: simulation.running,\n    display: simulation.display\n  };\n};\n\nconst MAX_CATEGORIES_TO_RENDER = 200;\n\nexport const Visualisation =  connect(mapStateToProps)(({ data, currentTick, maxTick, running, display }) => {\n  const containerRef = useRef();\n\n  const width = containerRef.current ? containerRef.current.parentNode.offsetWidth : 500;\n\n  return (\n    <div className=\"graphContainer\" ref={ containerRef } style={{ width }}>\n      {\n        running ? (\n          <div>\n            <h4>\n              Progress: { currentTick } / { maxTick }\n            </h4>\n          </div>): null\n      }\n      {\n        data && data.length > MAX_CATEGORIES_TO_RENDER ?\n          (\n            <h3>\n              Too many categories to render...\n            </h3>\n          ): null\n      }\n      {\n        display && data && data.length <= MAX_CATEGORIES_TO_RENDER ?\n          (\n            <ResponsiveBar\n              data={ data }\n              indexBy=\"category\"\n              keys={ ['value'] }\n              margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n              padding={ 0.3 }\n              colors={{ scheme: 'category10' }}\n              defs={[\n                {\n                  id: 'dots',\n                  type: 'patternDots',\n                  background: 'inherit',\n                  color: '#38bcb2',\n                  size: 4,\n                  padding: 1,\n                  stagger: true\n                },\n                {\n                  id: 'lines',\n                  type: 'patternLines',\n                  background: 'inherit',\n                  color: '#eed312',\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10\n                }\n              ]}\n              fill={[\n                {\n                  match: {\n                    id: 'fries'\n                  },\n                  id: 'dots'\n                },\n                {\n                  match: {\n                    id: 'sandwich'\n                  },\n                  id: 'lines'\n                }\n              ]}\n              borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n              axisTop={null}\n              axisRight={null}\n              axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'groups',\n                legendPosition: 'middle',\n                legendOffset: 32\n              }}\n              axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'count',\n                legendPosition: 'middle',\n                legendOffset: -40\n              }}\n              labelSkipWidth={12}\n              labelSkipHeight={12}\n              labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n              legends={[\n                {\n                  dataFrom: 'keys',\n                  anchor: 'bottom-right',\n                  direction: 'column',\n                  justify: false,\n                  translateX: 120,\n                  translateY: 0,\n                  itemsSpacing: 2,\n                  itemWidth: 100,\n                  itemHeight: 20,\n                  itemDirection: 'left-to-right',\n                  itemOpacity: 0.85,\n                  symbolSize: 20,\n                  effects: [\n                    {\n                      on: 'hover',\n                      style: {\n                        itemOpacity: 1\n                      }\n                    }\n                  ]\n                }\n              ]}\n              animate={true}\n              motionStiffness={90}\n              motionDamping={15}\n            />\n          ): null\n      }\n    </div>\n  );\n});\n","import React from 'react';\n\nimport { SimulationParameters } from './SimulationParameters';\nimport { Visualisation } from './Visualisation';\n\nexport const App = () => (\n  <div className=\"ui app container\">\n    <h1>\n      Pareteo Simulation\n    </h1>\n    <div className=\"ui two grid\">\n      <div className=\"ui four wide column\">\n        <SimulationParameters />\n      </div>\n      <div className=\"ui twelve wide column\">\n        <Visualisation />\n      </div>\n    </div>\n  </div>\n);\n","export const initialiseSimulation = ({ nodeCount }) => {\n  const initialConditions = new Array(nodeCount);\n  for (let l = 0; l < nodeCount; ++l) {\n    initialConditions[l] = l;\n  }\n  return {\n    associations: initialConditions\n  };\n};\n\nconst MAX_TRIALS = 1000;\n\nconst selectRandom = (upperBound, dontSelect = null) => {\n  let selection = Math.floor(upperBound * Math.random());\n  let counter = 0;\n\n  while (selection === dontSelect) {\n    ++counter;\n    selection = Math.floor(upperBound * Math.random());\n    if (counter > MAX_TRIALS) break;\n  }\n\n  return selection;\n};\n\nconst findRoot = (associations, current) => {\n  while (associations[current] !== current) {\n    current = associations[current];\n  }\n  return current;\n};\n\nexport const tickSimulation = ({ associations }) => {\n  const itemCount = associations.length;\n  const selectionOne = selectRandom(itemCount);\n  const selectionTwo = selectRandom(itemCount, selectionOne);\n\n  const rootOne = findRoot(associations, selectionOne);\n  const rootTwo = findRoot(associations, selectionTwo);\n\n  // Dont form loops in the associations!\n  if (rootOne !== rootTwo) associations[rootOne] = rootTwo;\n};\n","import {\n  TICK_SIMULATION,\n  PAUSE_SIMULATION,\n  RESET_SIMULATION,\n  START_SIMULATION,\n  ADVANCE_TO_COMPLETION,\n  UPDATE_VISUALISATION_DATA\n} from '../actions/types';\n\nimport { initialiseSimulation, tickSimulation } from '../lib/paretoSimulation';\nimport { associationsToVisualisationData } from '../lib/associationsToVisualisationData';\n\nconst INITIAL_STATE = {\n  currentTick: 0,\n  maxTicks: 1000,\n  running: false,\n  stepTime: 1000,\n  nodeCount: 0,\n  associations: [],\n  display: true\n};\n\nexport const simulationReducer = (state = INITIAL_STATE, { type, payload }) =>  {\n  switch (type) {\n  case START_SIMULATION: {\n    const {\n      maxTicks,\n      nodeCount,\n      stepTime\n    } = payload;\n\n    const initialAssociations = initialiseSimulation({ nodeCount: nodeCount });\n\n    return {\n      currentTick: 0,\n      running: true,\n      maxTicks,\n      nodeCount,\n      stepTime,\n      display: true,\n      associations: initialAssociations\n    };\n  }\n  case TICK_SIMULATION: {\n    const {\n      maxTicks,\n      currentTick,\n      running,\n      associations\n    } = state;\n    if (!running) return state;\n    if (currentTick === maxTicks - 1) return {\n      ...state,\n      display: true,\n      graphData: associationsToVisualisationData(associations),\n      running: false\n    };\n    // Side effecting for performance reasons\n    tickSimulation(associations);\n    return {\n      ...state,\n      currentTick: currentTick + 1\n    };\n  }\n  case RESET_SIMULATION: {\n    const initialAssociations = initialiseSimulation({ nodeCount: state.nodeCount });\n    return {\n      ...state,\n      display: true,\n      running: false,\n      currentTick: 0,\n      associations: initialAssociations,\n      graphData: associationsToVisualisationData(initialAssociations)\n    };\n  }\n  case UPDATE_VISUALISATION_DATA: {\n    const { associations } = state;\n    return {\n      ...state,\n      graphData: associationsToVisualisationData(associations)\n    };\n  }\n  case ADVANCE_TO_COMPLETION: {\n    return {\n      ...state,\n      running: true,\n      display: false,\n      stepTime: 0\n    };\n  }\n  case PAUSE_SIMULATION: return {\n    ...state,\n    running: false\n  };\n  default: return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport { simulationReducer } from './simulationReducer';\n\nexport default combineReducers({\n  form: formReducer,\n  simulation: simulationReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport { App } from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  (\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  ),\n document.getElementById('root')\n);\n\n"],"sourceRoot":""}